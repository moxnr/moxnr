import { L as LoaderOptions, R as ReadingTime, H as Heading } from './types-253e6ba6.js';
import { ProcessorOptions } from '@mdx-js/mdx';
import 'gray-matter';
import 'mdast';
import 'next';
import 'react';
import 'rehype-pretty-code';
import 'webpack';

type MdxOptions = LoaderOptions['mdxOptions'] & Pick<ProcessorOptions, 'jsx' | 'outputFormat'>;
declare function compileMdx(source: string, loaderOptions?: Pick<LoaderOptions, 'staticImage' | 'flexsearch' | 'defaultShowCopyCode' | 'readingTime' | 'latex' | 'codeHighlight'> & {
    mdxOptions?: MdxOptions;
    route?: string;
    locale?: string;
}, { filePath, useCachedCompiler, isPageImport }?: {
    filePath?: string | undefined;
    useCachedCompiler?: boolean | undefined;
    isPageImport?: boolean | undefined;
}): Promise<{
    structurizedData: any;
    searchIndexKey: string | null;
    frontMatter: {
        [key: string]: any;
    };
    readingTime?: ReadingTime | undefined;
    title?: string | undefined;
    headings: Heading[];
    hasJsxInH1?: boolean | undefined;
    result: string;
}>;

export { compileMdx };
